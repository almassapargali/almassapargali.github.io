-
  name: Wordbox
  links:
    - name: Website
      url: http://wordboxapp.com/
    - name: iTunes
      url: https://itunes.apple.com/us/app/wordbox-simple-beautiful-text/id674669080?mt=8
  paragraphs:
    - Wordbox is a beautiful text editor for iPhone. It supports Markdown, Dropbox synchronization, posting to various blogging platforms, themes, HTML/PDF export, and many more features.
    - The most difficult part of building this application was implementing a reliable Dropbox synchronization.
-
  name: 'SimpleVisa USA'
  links:
    - name: Website
      url: http://get.simplevisa.com/usa/
    - name: iTunes
      url: https://itunes.apple.com/us/app/id861163051?mt=8
  paragraphs:
    - Get your visas just by scanning your passport.
    - When developing this app we used Jumio for passport and credit card recognition. We also used Stripe to handle payments. And all of that was built on top of Parse, an excellent BaaS. I also wrote some Javascript on CloudCode for server side logic.
-
  name: Appease
  links:
    - name: Website
      url: http://getappease.com
  paragraphs:
    - Make mobile apps for your e-commerce site, blog, or small business in about 10 minutes.
    - AppEase is a code-free way to make a beautiful mobile app in minutes. Built with Rails as single page web application, it allows you to generate iOS and Android apps without coding. Apps support various features, like push notifications, geo based notificaitons, social stream embedding many social networks, analytics, and many more.
    - I've built native clients for iOS and Android, and website using Ruby on Rails. Also, I've learned a lot about build automatization, Xcode project structures, etc.
-
  name: Openruns
  link:
    - name: Website
      url: http://openrunsapp.com
    - name: iTunes
      url: https://itunes.apple.com/us/app/openruns/id1038801937?mt=8
  paragraphs:
    - OpenRuns is a platform that organizes pickup basketball games anywhere in the world, allowing users to create, search, and join games based on location, date, and skill level.
    - I've developer iOS, and backend on this project, and helped to build Android version. Initially built with Parse, but, it wasn't flexible enought for our needs, so I've rewrote backend using Elixir/Phoenix. Migrating data from Parse without disturbing our users was a bit challenging, but everything went great. Also I've used websockets to build chat on this app.
